name: 🧹 RGPD Automatic Cleanup

on:
  # Exécution automatique tous les jours à 3h du matin (UTC)
  schedule:
    - cron: "0 3 * * *"

  # Permet l'exécution manuelle depuis GitHub Actions
  workflow_dispatch:
    inputs:
      force_execution:
        description: "Force execution even if no data to purge"
        required: false
        default: "false"
        type: boolean

jobs:
  rgpd-cleanup:
    runs-on: ubuntu-latest
    name: 🛡️ Execute RGPD Data Purges

    steps:
      - name: 📋 Checkout repository
        uses: actions/checkout@v4

      - name: 🚀 Execute RGPD Purge Function
        id: purge
        run: |
          echo "🧹 Starting RGPD automatic cleanup..."

          # Appel de l'Edge Function Supabase
          response=$(curl -s -w "HTTPSTATUS:%{http_code}" \
            -X POST \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${{ secrets.SUPABASE_ANON_KEY }}" \
            "${{ vars.SUPABASE_URL }}/functions/v1/scheduled-cleanup")

          # Extraction du code de retour HTTP
          http_code=$(echo $response | tr -d '\n' | sed -e 's/.*HTTPSTATUS://')
          response_body=$(echo $response | sed -e 's/HTTPSTATUS:.*//g')

          echo "HTTP Status: $http_code"
          echo "Response: $response_body"

          # Vérification du succès
          if [ "$http_code" == "200" ]; then
            echo "✅ RGPD purge executed successfully"
            echo "Response: $response_body"
            
            # Parser le nombre de purges exécutées
            purges_count=$(echo "$response_body" | grep -o '"purges_executed":[0-9]*' | cut -d':' -f2)
            echo "📊 Purges executed: $purges_count"
            
            # Définir la sortie pour les étapes suivantes
            echo "purges_executed=$purges_count" >> $GITHUB_OUTPUT
            echo "success=true" >> $GITHUB_OUTPUT
          else
            echo "❌ RGPD purge failed with HTTP $http_code"
            echo "Error response: $response_body"
            echo "success=false" >> $GITHUB_OUTPUT
            exit 1
          fi

      - name: 📊 Report Results
        if: always()
        run: |
          if [ "${{ steps.purge.outputs.success }}" == "true" ]; then
            echo "🎉 RGPD Cleanup completed successfully!"
            echo "📈 Statistics:"
            echo "  • Purges executed: ${{ steps.purge.outputs.purges_executed }}"
            echo "  • Execution time: $(date -u)"
            echo "  • Next scheduled run: Tomorrow at 3:00 AM UTC"
          else
            echo "🚨 RGPD Cleanup failed!"
            echo "Please check the logs above for error details."
          fi

      - name: 🔔 Notify on Failure (Optional)
        if: failure()
        run: |
          echo "🚨 RGPD Cleanup Job Failed!"
          echo "Timestamp: $(date -u)"
          echo "Repository: ${{ github.repository }}"
          echo "Workflow: ${{ github.workflow }}"
          # Ajoutez ici une notification Slack/Discord si nécessaire

# =====================================================
# 🔧 CONFIGURATION REQUISE
# =====================================================
#
# Repository Settings > Secrets and variables > Actions:
#
# SECRETS (tab "Secrets"):
# 1. SUPABASE_ANON_KEY
#    Valeur: Votre clé publique Supabase (anon key)
#
# VARIABLES (tab "Variables"):
# 2. SUPABASE_URL
#    Valeur: https://your-project-id.supabase.co
#
# OPTIONNEL:
# 3. CLEANUP_API_TOKEN (secret)
#    Valeur: Token personnalisé pour sécuriser l'endpoint
#
# =====================================================
# 📋 FONCTIONNEMENT
# =====================================================
#
# ⏰ Exécution automatique: Tous les jours à 3h du matin UTC
# 🎯 Action: Appelle votre Edge Function scheduled-cleanup
# 📊 Résultat: Purge les utilisateurs supprimés depuis 3+ ans
# 🔍 Monitoring: Logs détaillés dans GitHub Actions
# 🚨 Alertes: Échec visible dans l'onglet Actions
#
# =====================================================
